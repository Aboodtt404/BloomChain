type UserProfile = 
 record {
   email: opt text;
   joinedAt: int;
   "principal": principal;
   username: opt text;
 };
type Result_1 = 
 variant {
   err: text;
   ok: UserProfile;
 };
type Result = 
 variant {
   err: text;
   ok: Message;
 };
type Message = 
 record {
   author: principal;
   content: text;
   id: nat;
   timestamp: int;
 };
service : {
  createOrUpdateProfile: (username: opt text, email: opt text) -> (Result_1);
  getCanisterInfo: () -> (record {
                            name: text;
                            version: text;
                          }) query;
  getMessageCount: () -> (nat) query;
  getMessages: (limit: opt nat) -> (vec Message) query;
  getMyProfile: () -> (opt UserProfile);
  getProfile: (userPrincipal: principal) -> (opt UserProfile) query;
  greet: (name: text) -> (text) query;
  isAuthenticated: (userPrincipal: principal) -> (bool) query;
  submitMessage: (content: text) -> (Result);
  whoami: () -> (principal);
}
